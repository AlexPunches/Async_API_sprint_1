services:
  test-redis:
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"
    ports:
      - "6379:6379"

  test-auth-postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - pg_data_auth_test:/var/lib/postgresql/data/
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_AUTH}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_AUTH}
      POSTGRES_USER: ${POSTGRES_USER_AUTH}

  test-auth:
    build: ../../.
    image: auth-flask-image
    volumes:
      - /tmp/logs/auth_flask/:/var/log/auth_flask/
    expose:
      - "5000"
    environment:
      FLASK_APP: ${FLASK_APP}  
      FLASK_DEBUG: ${FLASK_DEBUG}  
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}  
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}  
      JWT_ACCESS_TOKEN_EXPIRES: ${JWT_ACCESS_TOKEN_EXPIRES}  
      JWT_REFRESH_TOKEN_EXPIRES: ${JWT_REFRESH_TOKEN_EXPIRES}  
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}  
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}  
      GOOGLE_OAUTH_ENDPOINT: ${GOOGLE_OAUTH_ENDPOINT}  
      OAUTHLIB_INSECURE_TRANSPORT: ${OAUTHLIB_INSECURE_TRANSPORT}  
      ENABLE_TRACER: ${ENABLE_TRACER}  
      JAEGER_HOST: ${JAEGER_HOST}  
      JAEGER_PORT: ${JAEGER_PORT}  
      AUTH_SENTRY_DSN: ${AUTH_SENTRY_DSN}

    ports:
      - "5000:5000"
    entrypoint:
      ["gunicorn", "-b", "0.0.0.0:5000", "--workers", "4", "src.pywsgi:app"]


  auth-pytests:
    image: auth-flask-image
    expose:
      - "5000"
    environment:
      POSTGRES_DB_AUTH: ${FLASK_APP} 
      POSTGRES_USER_AUTH: ${FLASK_APP} 
      POSTGRES_PASSWORD_AUTH: ${FLASK_APP}
      DB_HOST_AUTH: ${FLASK_APP} 
      DB_PORT_AUTH: ${FLASK_APP} 
    depends_on:
      - test-auth-postgres
      - test-redis
      - test-auth
    entrypoint: >
      sh -c "pip install -r /opt/app/tests/functional/requirements.txt
      && python3 /opt/app/tests/functional/utils/wait_for_redis.py
      && python /opt/app/src/manage.py db upgrade head
      && pytest /opt/app/tests/functional/src"

volumes:
  pg_data_auth_test:
