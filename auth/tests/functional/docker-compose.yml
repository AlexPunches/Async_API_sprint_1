version: '3'
services:
  test-redis:
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"
    ports:
      - "6379:6379"

  test-auth-postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - pg_data_auth_test:/var/lib/postgresql/data/
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_AUTH}
      POSTGRES_USER: ${POSTGRES_USER_AUTH}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_AUTH}

  test-auth:
    build: ../../.
    image: auth-flask-image
    volumes:
      - /tmp/logs/auth_flask/:/var/log/auth_flask/
    expose:
      - "5000"
    environment:
      POSTGRES_DB_AUTH: ${POSTGRES_DB_AUTH}
      POSTGRES_USER_AUTH: ${POSTGRES_USER_AUTH}
      POSTGRES_PASSWORD_AUTH: ${POSTGRES_PASSWORD_AUTH}
      # Подключение к PostgresSQL внутри сети Docker Compose.
      DB_HOST_AUTH: 'test-auth-postgres'
      # Подключение к Redis внутри сети Docker Compose.
      REDIS_HOST: 'test-redis'
      # Настройки безопасности.
      ENABLE_TRACER: 'False'
      FLASK_SECRET_KEY: 'test_flask_security_key'
      JWT_SECRET_KEY: 'jwt_secret_key'
      GOOGLE_OAUTH_CLIENT_ID: ''
      GOOGLE_OAUTH_CLIENT_SECRET: ''
      EVENT_STORE_HOST: ${EVENT_STORE_HOST}
    ports:
      - "5000:5000"
    depends_on:
      - test-auth-postgres

  auth-pytests:
    image: auth-flask-image
    expose:
      - "5000"
    volumes:
      - /tmp/logs/auth_flask/:/var/log/auth_flask/
    environment:
      POSTGRES_DB_AUTH: ${POSTGRES_DB_AUTH}
      POSTGRES_USER_AUTH: ${POSTGRES_USER_AUTH}
      POSTGRES_PASSWORD_AUTH: ${POSTGRES_PASSWORD_AUTH}
      # Подключение к PostgresSQL внутри сети Docker Compose.
      DB_HOST_AUTH: 'test-auth-postgres'
      # Подключение к Redis внутри сети Docker Compose.
      REDIS_HOST: 'test-redis'
      # Настройки безопасности.
      ENABLE_TRACER: 'False'
      FLASK_SECRET_KEY: 'test_flask_security_key'
      JWT_SECRET_KEY: 'jwt_secret_key'
      GOOGLE_OAUTH_CLIENT_ID: ''
      GOOGLE_OAUTH_CLIENT_SECRET: ''
      AUTH_HOST: 'test-auth'
      JWT_ACCESS_TOKEN_EXPIRES: '1 00:00:00.000000'
      JWT_REFRESH_TOKEN_EXPIRES: '30 00:00:00.000000'
      EVENT_STORE_HOST: ${EVENT_STORE_HOST}
    depends_on:
      - test-redis
      - test-auth
    entrypoint: >
      sh -c "pip install -r /opt/app/tests/functional/requirements.txt
      && python3 /opt/app/tests/functional/utils/wait_for_redis.py
      && python3 /opt/app/src/manage.py db upgrade head
      && pytest /opt/app/tests/functional/src"

volumes:
  pg_data_auth_test:
