"""third_partition

Revision ID: b99f73894232
Revises: 23e3ffe9984d
Create Date: 2022-11-19 17:02:37.722877

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b99f73894232'
down_revision = '23e3ffe9984d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history_smart',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('date_login', sa.DateTime(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('user_device_type', sa.Text(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_device_type'),
    sa.UniqueConstraint('id', 'device_type'),
    postgresql_partition_by='LIST (device_type)'
    )
    op.add_column('login_history', sa.Column('user_agent', sa.Text(), nullable=True))
    op.add_column('login_history', sa.Column('user_device_type', sa.Text(), nullable=False))
    op.add_column('login_history', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_unique_constraint(None, 'login_history', ['id', 'user_device_type'])
    op.create_unique_constraint(None, 'login_history', ['id'])
    op.create_foreign_key(None, 'login_history', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'login_history', type_='foreignkey')
    op.drop_constraint(None, 'login_history', type_='unique')
    op.drop_constraint(None, 'login_history', type_='unique')
    op.drop_column('login_history', 'user_id')
    op.drop_column('login_history', 'user_device_type')
    op.drop_column('login_history', 'user_agent')
    op.drop_table('login_history_smart')
    # ### end Alembic commands ###

from models.login_history import (
    PARTITION_TABLES_REGISTRY,
    create_table_login_history_partition_ddl
)
for table_class, device_type in PARTITION_TABLES_REGISTRY:
    ddl = create_table_login_history_partition_ddl(table_class.__table__, device_type)
    ddl(target=None, bind=op.get_bind())