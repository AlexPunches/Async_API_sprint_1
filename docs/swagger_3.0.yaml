openapi: 3.0.3
info:
  title: Auth. Sprint 6.
  description: |-
    ## TODO
      - –ø—Ä–æ–¥—É–º–∞—Ç—å –∏ —Ä–µ—à–∏—Ç—å –∫–∞–∫–∏–º –±—É–¥–µ—Ç —Ä–æ—É—Ç–∏–Ω–≥
      - –¥–æ–±–∞–≤–∏—Ç—å –†–æ–ª–∏
      - –≥–¥–µ-—Ç–æ —Ç—É—Ç –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –ø–µ—Ä–º–∏—à–µ–Ω—ã
    ### –í–æ–ø—Ä–æ—Å–∏–∫–∏:
      - –Ω–∞–≤–µ—Ä–µ–Ω–æ, –Ω–µ –Ω—É–∂–Ω—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ `login` –∏ `email` –¥–ª—è —é–∑–µ—Ä–∞. (–ù–µ –ø–æ–º–Ω—é –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—Ç–∞—â–∏–ª login, –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫—É–¥–∞-—Ç–æ –∏–∑ —Ç–µ–æ—Ä–∏–∏.)  
      
    --  
    _–ó–´ ü§ï_  
    _–∫–∞–∫ –∂–µ –±—ã–ª–æ —Ö–æ—Ä–æ—à–æ —Å [–§–∞—Å—Ç–∞–ø–∏](https://fastapi.tiangolo.com/features/#automatic-docs) –∏ —Å–æ —Å–≤–∞–≥–µ—Ä–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º_
  version: 0.1.0
servers:
  - url: http://127.0.0.1:5000
  - url: http://127.0.0.1
tags:
  - name: auth
    description: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
  - name: user
    description: –î–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
  - name: role
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–º —Ä–æ–ª–µ–π

paths:
  /auth/login:
    get: 
      tags:
        - auth
      summary: Login
      description: ''
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: –≠–ª–µ–∫—Ç—Ä–æ–ø–æ—á—Ç–∞
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: –ü–∞—Ä–æ–ª—å
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Success-Token:
              description: JWT
              schema:
                type: string
            X-Refresh-Token:
              description: –û–±—ã—á–Ω—ã–π UUID
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied

  /auth/logout:
    get:
      tags:
        - auth
      summary: Logout
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation

  /auth/v1/users/:
    get:
      tags:
        - user
      summary: –ü–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          schema:
            type: string
            default: 1
        - name: per_page
          in: query
          description: –ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
          schema:
            type: string
            default: 20
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseUsers'
    post:
      tags:
        - user
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
      description: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∏ —Ç.–ø. 
      operationId: registrationUser
      requestBody:
        description: roles –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateScheme'
        required: true
      responses:
        '201':
          description:  User has registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheme'
        '400':
          description: –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫

  /auth/v1/users/{user_id}:
    get:
      tags:
        - user
      summary: –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          description: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          required: true
          schema:
            type: string
            format: uuid
            title: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheme'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMessage'
    patch:
      tags:
        - user
      summary: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      operationId: EditUser
      requestBody:
        description: –ï—Å–ª–∏ –ø–æ–ª—è –Ω–µ—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è (PATCH)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateScheme'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheme'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMessage'

  /auth/v1/roles/:
    get:
      tags:
        - role
      responses:
        
    post:
      tags:
        - role
      responses:

  /auth/v1/roles/{role_id}:
    get:
      tags:
        - role
      responses:
    put:
      tags:
        - role
      responses:
    delete:
      tags:
        - role
      responses:

components:
  schemas:
    UserScheme:
      required: 
        - id
        - email
      type: object
      properties: 
        id:
          type: string
          title: uuid
          format: uuid
        email:
          type: string
        login:
          type: string
        is_superuser:
          type: boolean
        password:
          type: string
        roles:
          type: array
          items: 
            $ref: '#/components/schemas/RoleScheme'
    UserCreateScheme:
      required:
        - email
        - name
      type: object
      properties: 
        email:
          type: string
        login:
          type: string
        is_superuser:
          type: boolean
        password:
          type: string
    UserEditScheme:
      required:
        - email
        - name
      type: object
      properties: 
        email:
          type: string
        login:
          type: string
        is_superuser:
          type: boolean
        password:
          type: string
        roles:
          type: array
    RoleScheme:
      required:
        - id
        - name
      type: object
      properties: 
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    RoleEdit:
      required:
        - name
      type: object
      properties: 
        name:
          type: string
        description:
          type: string
    PaginationResponseUsers:
      required:
      type: object
      properties:
        total:
          type: integer
        page:
          type: integer
          example: 1
        pages:
          type: integer
          example: 1
        results:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/UserScheme'
    BaseMessage:
      type: object
      properties:
        message:
          type: string

  requestBodies:
    UserEdit:
      description: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserEditScheme'
    UserCreate:
      description: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreateScheme'

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    access-token:
      type: apiKey
      name: access_token
      in: header
    refresh-token:
      type: apiKey
      name: refresh_token
      in: header